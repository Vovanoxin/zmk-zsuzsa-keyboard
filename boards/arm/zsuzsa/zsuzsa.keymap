/*
* Copyright (c) 2023 CTDD
* SPDX-License-Identifier: MIT
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  TAB    |  Q  |  W  |  E   |  R   |    T    |                                          |  Y   |  U    |  I    |  O   |   P   | bksp |
            // | ESC/CTRL|  A  |  S  |  D   |  F   |    G    |                                          |  H   |  J    |  K    |  L   |   ;   |"/ctrl|
            // | SHIFT   |  Z  |  X  |  C   |  V   |    B    |   [    |  CAPS    |  |   LAY 4  |  ]     |  N   |  M    |  ,    |  .   |   /   |shft  |
            //                       |LAY 1 | WIN  | ENT/ALT |  SPACE |  LAY 3   |  |   LAY 2  |  SPACE | ALT  | WIN   | APP   |

            bindings = <
	&kp TAB        &kp Q  &kp W  &kp E   &kp R     &kp T                                                                &kp Y          &kp U     &kp I      &kp O    &kp P     &kp BSPC
	&mt ESC LCTRL  &kp A  &kp S  &kp D   &kp F     &kp G                                                                &kp H          &kp J     &kp K      &kp L    &kp SEMI  &mt RCTRL SQT
	&kp LSHFT      &kp Z  &kp X  &kp C   &kp V     &kp B         &kp LEFT_BRACKET  &kp CAPS      &mo 4  &kp RIGHT_BRACKET  &kp N          &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
								 &mo 1  &kp LWIN  &mt LEFT_ALT ENTER  &kp SPACE    &mo 3         &mo 2  &kp SPACE          &kp RIGHT_ALT  &kp RWIN  &kp K_APP
            >;
        };

        bt_layer {
            bindings = <
	&trans  &bt BT_CLR    &trans        &out OUT_TOG  &trans        &trans                                         &trans  &trans  &trans  &trans  &trans  &trans
	&trans  &trans        &trans        &trans        &trans        &trans                                         &trans  &trans  &trans  &trans  &trans  &trans
	&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans  &trans  &trans  &trans   &trans  &trans  &trans  &trans  &trans  &trans
										&trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        num_layer {
            bindings = <
	&kp GRAVE  &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3   &kp NUMBER_4  &kp N5                                                             &kp NUMBER_6       &kp NUMBER_7    &kp NUMBER_8   &kp NUMBER_9          &kp NUMBER_0           &kp EQUAL
	&kp TILDE  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH       &kp DOLLAR    &kp PERCENT                                                        &kp CARET          &kp AMPERSAND   &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PLUS
	&kp PIPE   &kp BSLH         &kp COLON     &kp SEMICOLON  &kp MINUS     &kp LEFT_BRACKET  &kp LEFT_BRACE  &trans  &trans  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp UNDERSCORE  &kp LESS_THAN  &kp GREATER_THAN      &kp SLASH              &kp QUESTION
											  &trans         &trans        &trans            &trans          &trans  &trans  &trans           &trans             &trans          &trans
            >;
        };

        nav_layer {
            bindings = <
	&trans  &trans    &trans     &trans    &trans     &trans                                          &kp PG_UP  &kp HOME    &kp UP            &kp END     &kp C_VOLUME_UP    &kp DELETE
	&trans  &kp LGUI  &kp LSHFT  &kp LALT  &kp LCTRL  &trans                                          &kp PG_DN  &kp LEFT    &kp DOWN          &kp RIGHT   &kp C_VOLUME_DOWN  &kp INSERT
	&trans  &trans    &trans     &trans    &trans     &trans  &trans  &kp SCROLLLOCK  &trans  &trans  &trans     &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_MUTE         &kp PRINTSCREEN
								 &trans    &trans     &trans  &trans  &trans          &trans  &trans  &trans     &trans      &trans
            >;
        };

        function_layer {
            bindings = <
	&trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans                                  &trans  &trans     &trans     &trans    &trans    &trans
	&trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans                                  &trans  &kp RSHFT  &kp RCTRL  &kp LALT  &kp LGUI  &trans
	&trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans     &trans    &trans    &trans
							 &trans   &trans   &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans
            >;
        };
    };
};
